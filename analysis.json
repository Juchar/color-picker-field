{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "src/color-picker-field.js",
      "properties": [
        {
          "name": "list",
          "type": "string | null | undefined",
          "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
          "privacy": "public",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.",
          "privacy": "public",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Message to show to the user when validation fails.",
          "privacy": "public",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "labelSelect",
          "type": "string | null | undefined",
          "description": "The label to show on the button to select a color in the color picker popup.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Select\""
        },
        {
          "name": "labelCancel",
          "type": "string | null | undefined",
          "description": "The label to show on the button to cancel/close the color picker popup.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Cancel\""
        },
        {
          "name": "hoverIcon",
          "type": "string | null | undefined",
          "description": "The icon that is shown if hovering the color button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"vaadin:paintbrush\""
        },
        {
          "name": "nativeInputMediaQuery",
          "type": "string | null | undefined",
          "description": "Media query used to enable native input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableHex",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable **hex** input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateInputPattern\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableRgb",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable **rgb** input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateInputPattern\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableHsl",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable **hsl** input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateInputPattern\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableAlpha",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable **alpha** input and **alpha** slider.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateInputPattern\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "pinnedInputs",
          "type": "boolean | null | undefined",
          "description": "Set to true to have all inputs visible all the time instead of having a switch button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "pinnedPalettes",
          "type": "boolean | null | undefined",
          "description": "Set to true to have all palettes visible all the time instead of having a switch button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "lastUsedFormat",
          "type": "string | null | undefined",
          "description": "The format that the user used last as input or by switching inputs. One of \\`hex\\`,\\`rgb\\`,\\`hsl\\`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "palettes",
          "type": "Array | null | undefined",
          "description": "The palettes to be shown. Should be an Array of Arrays, whereas the inner Arrays should contain valid\nCSS color codes or CSS Custom Properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "stepAlpha",
          "type": "number | null | undefined",
          "description": "The precision step to use for alpha values.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0.01"
        },
        {
          "name": "stepHsl",
          "type": "number | null | undefined",
          "description": "The precision step to use for hsl values.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 6
            },
            "end": {
              "line": 279,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "enableHistory",
          "type": "boolean | null | undefined",
          "description": "Set to true to enable the history for selected colors. If the history is enabled it is not possible to\nuse palettes as they are internally used for the history.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "maxHistory",
          "type": "number | null | undefined",
          "description": "The maximum amount of colors to be stored in the history.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 6
            },
            "end": {
              "line": 294,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "10"
        },
        {
          "name": "enableCssCustomProperties",
          "type": "boolean | null | undefined",
          "description": "Set to true to be able to use CSS Custom Properties as input value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "showChangeFormatButton",
          "type": "boolean | null | undefined",
          "description": "Set to true to show the button to change color formats.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_nativeInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_popUpColor",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 6
            },
            "end": {
              "line": 310,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_previousColor",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 311,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_selectColorButtonColor",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 37
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_selectColorButtonIcon",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_changeFormatButton",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 314,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showChangeFormatButton",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_changeFormatButtonMouseDown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_changeFormatButtonTouchend",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_nextFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectPopUpColor",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelPopUp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 376,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateOnValueChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 2
            },
            "end": {
              "line": 393,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelectedColor",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 2
            },
            "end": {
              "line": 406,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateHistory",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getResolvedColor",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 2
            },
            "end": {
              "line": 421,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getEnabledFormats",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 2
            },
            "end": {
              "line": 438,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateInputPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "_getColorFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 2
            },
            "end": {
              "line": 449,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "color"
            }
          ]
        }
      ],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 504,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "TextFieldElement",
      "name": "ColorPickerField",
      "attributes": [
        {
          "name": "list",
          "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "pattern",
          "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 122,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "title",
          "description": "Message to show to the user when validation fails.",
          "sourceRange": {
            "file": "../node_modules/%40vaadin/vaadin-text-field/src/vaadin-text-field.js",
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "Vaadin.TextFieldElement"
        },
        {
          "name": "label-select",
          "description": "The label to show on the button to select a color in the color picker popup.",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label-cancel",
          "description": "The label to show on the button to cancel/close the color picker popup.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hover-icon",
          "description": "The icon that is shown if hovering the color button.",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "native-input-media-query",
          "description": "Media query used to enable native input.",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-hex",
          "description": "Set to true to disable **hex** input.",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-rgb",
          "description": "Set to true to disable **rgb** input.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-hsl",
          "description": "Set to true to disable **hsl** input.",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-alpha",
          "description": "Set to true to disable **alpha** input and **alpha** slider.",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "pinned-inputs",
          "description": "Set to true to have all inputs visible all the time instead of having a switch button.",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "pinned-palettes",
          "description": "Set to true to have all palettes visible all the time instead of having a switch button.",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "last-used-format",
          "description": "The format that the user used last as input or by switching inputs. One of \\`hex\\`,\\`rgb\\`,\\`hsl\\`.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "palettes",
          "description": "The palettes to be shown. Should be an Array of Arrays, whereas the inner Arrays should contain valid\nCSS color codes or CSS Custom Properties.",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "step-alpha",
          "description": "The precision step to use for alpha values.",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step-hsl",
          "description": "The precision step to use for hsl values.",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 6
            },
            "end": {
              "line": 279,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "enable-history",
          "description": "Set to true to enable the history for selected colors. If the history is enabled it is not possible to\nuse palettes as they are internally used for the history.",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 6
            },
            "end": {
              "line": 287,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "max-history",
          "description": "The maximum amount of colors to be stored in the history.",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 6
            },
            "end": {
              "line": 294,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "enable-css-custom-properties",
          "description": "Set to true to be able to use CSS Custom Properties as input value.",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-change-format-button",
          "description": "Set to true to show the button to change color formats.",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "last-used-format-changed",
          "description": "Fired when the `lastUsedFormat` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-picker-field"
    }
  ]
}
